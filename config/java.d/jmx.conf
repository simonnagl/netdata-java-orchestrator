{
    "jmxServers": [],
    "commonCharts": [
        {
            "id": "cpu",
            "title": "JVM CPU utilization",
            "units": "percentage",
            "priority": "8000",
            "chartType": "AREA",
            "dimType": "INCREMENTAL",
            "dimensions": [
                {
                    "from": "java.lang:type=OperatingSystem",
                    "value": "ProcessCpuTime",
                    "name": "cpu",
                    "divisor": "10000000"
                }
            ]
        },
        {
            "id": "load",
            "title": "JVM Load Average",
            "units": "load",
            "priority": "8010",
            "chartType": "LINE",
            "dimType": "ABSOLUTE",
            "dimensions": [
                {
                    "from": "java.lang:type=OperatingSystem",
                    "value": "ProcessCpuLoad",
                    "name": "load1"
                }
            ]
        },
        {
            "id": "uptime",
            "title": "JVM Uptime",
            "units": "seconds",
            "priority": "8020",
            "chartType": "LINE",
            "dimType": "ABSOLUTE",
            "dimensions": [
                {
                    "from": "java.lang:type=Runtime",
                    "value": "Uptime",
                    "name": "uptime",
                    "divisor": "1000"
                }
            ]
        },
        {
            "id": "threading",
            "title": "Threads",
            "units": "threads",
            "priority": "8030",
            "chartType": "LINE",
            "dimType": "ABSOLUTE",
            "dimensions": [
                // Returns the peak live thread count since the Java virtual machine started or peak was reset.
                {
                    "from": "java.lang:type=Threading",
                    "value": "PeakThreadCount",
                    "name": "peak"
                },
                // Returns the current number of live daemon threads.
                {
                    "from": "java.lang:type=Threading",
                    "value": "DaemonThreadCount",
                    "name": "daemon"
                },
                // Returns the total number of threads created and also started since the Java virtual machine started.
                {
                    "from": "java.lang:type=Threading",
                    "value": "TotalStartedThreadCount",
                    "name": "total"
                },
                // Returns the current number of live threads including both daemon and non-daemon threads.
                {
                    "from": "java.lang:type=Threading",
                    "value": "ThreadCount",
                    "name": "current"
                }
            ]
        },
        {
            "id": "classloading",
            "title": "Classes loaded",
            "subsection": "class_loading",
            "units": "classes",
            "priority": "8040",
            "chartType": "LINE",
            "dimType": "ABSOLUTE",
            "dimensions": [
                {
                    "from": "java.lang:type=ClassLoading",
                    "value": "TotalLoadedClassCount",
                    "name": "loaded_since_start"
                },
                {
                    "from": "java.lang:type=ClassLoading",
                    "value": "LoadedClassCount",
                    "name": "current"
                },
                {
                    "from": "java.lang:type=ClassLoading",
                    "value": "UnloadedClassCount",
                    "name": "unloaded_since_start"
                }
            ]
        },
        {
            "id": "compilation",
            "title": "Compilation Time",
            "units": "percentage",
            "priority": "8050",
            "chartType": "LINE",
            "dimType": "INCREMENTAL",
            "dimensions": [
                {
                    "from": "java.lang:type=Compilation",
                    // Returns the approximate accumlated elapsed time (in milliseconds) spent in compilation.
                    "value": "TotalCompilationTime",
                    "name": "total",
                    // Convert ms/s to percent
                    "divisor": "10"
                }
            ]
        },
        {
            "id": "garbagecount",
            "title": "Garbage Collection Number",
            "subsection": "garbage_collection",
            "units": "collection/s",
            "priority": "8060",
            "chartType": "LINE",
            "dimType": "INCREMENTAL",
            "dimensions": [
                {
                    "from": "java.lang:type=GarbageCollector,name=PS Scavenge",
                    "value": "CollectionCount",
                    "name": "PS_Scavenge"
                },
                {
                    "from": "java.lang:type=GarbageCollector,name=PS MarkSweep",
                    "value": "CollectionCount",
                    "name": "PS_MarkSweep"
                }
            ]
        },
        {
            "id": "garbagetime",
            "title": "Time spent collecting garbage",
            "subsection": "garbage_collection",
            "units": "percentage",
            "priority": "8070",
            "chartType": "LINE",
            "dimType": "INCREMENTAL",
            "dimensions": [
                {
                    "from": "java.lang:type=GarbageCollector,name=PS Scavenge",
                    "value": "CollectionTime",
                    "name": "PS_Scavenge",
                    "divisor": "10"
                },
                {
                    "from": "java.lang:type=GarbageCollector,name=PS MarkSweep",
                    "value": "CollectionTime",
                    "name": "PS_MarkSweep",
                    "divisor": "10"                    
                }
            ]
        }
    ]
}